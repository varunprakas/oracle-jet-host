{"version":3,"file":"clientHints-4675dd55.js","sources":["../../src/utils/PRIVATE_clientHints/clientHints.ts"],"sourcesContent":["// Typescript does not support NavigatorUAData in its DOM lib,\n// therefore we declare our own type - see:\n//    https://wicg.github.io/ua-client-hints/#interface\ntype NavigatorUAData = {\n  brands: Array<{ brand: string; version: string }>;\n  mobile: boolean;\n  platform: string;\n};\n\n// Enum types\ntype ClientBrowser = 'chrome' | 'edge' | 'firefox' | 'safari' | 'unknown';\n\ntype ClientDeviceType = 'phone' | 'tablet' | 'unknown';\n\ntype ClientPlatform = 'android' | 'ios' | 'mac' | 'windows' | 'unknown';\n\n// FIXME: Can we hide these exported type declarations from external consumers? See JET-50202\n// Defines the set of available hints about the client rendering environment\nexport type ClientHints = {\n  browser: ClientBrowser;\n  browserMajorVersion: number;\n  deviceType: ClientDeviceType;\n  platform: ClientPlatform;\n  hasTouchSupport: boolean;\n  isHybrid: boolean;\n};\n\nconst defaultClientHints: ClientHints = {\n  browser: 'unknown',\n  browserMajorVersion: -1,\n  deviceType: 'unknown',\n  platform: 'unknown',\n  hasTouchSupport: 'ontouchstart' in window,\n  isHybrid: window.matchMedia?.('(hover: hover) and (any-pointer: coarse)').matches\n};\n\nlet cachedClientHints: ClientHints;\n\nexport function getClientHints(uaString?: string): Readonly<ClientHints> {\n  // Compute if there is no cached result, OR if a userAgent string\n  //  was passed in as an argument\n  if (cachedClientHints === undefined || uaString) {\n    let hints: ClientHints;\n    const userAgentData = (navigator as any)['userAgentData'] as NavigatorUAData;\n    if (userAgentData) {\n      hints = getHintsFromUserAgentData(userAgentData);\n    } else {\n      hints = getHintsFromUserAgentString(uaString ?? navigator.userAgent);\n    }\n\n    // If no argument was passed in then this was computed from Navigator properties,\n    // so cache the result.\n    if (!uaString) {\n      cachedClientHints = { ...hints };\n      Object.freeze(cachedClientHints);\n    }\n    // Otherwise, return the bespoke results without touching the cache\n    else {\n      return hints;\n    }\n  }\n  return cachedClientHints;\n}\n\nfunction getHintsFromUserAgentData(userAgentData: NavigatorUAData): Readonly<ClientHints> {\n  const hints = { ...defaultClientHints };\n\n  // Loop through brands => browser, browserMajorVersion\n  for (let item of userAgentData.brands) {\n    const brand = item.brand.toLowerCase();\n    if (brand.indexOf('chrome') > -1) {\n      hints.browser = 'chrome';\n    } else if (brand.indexOf('edge') > -1) {\n      hints.browser = 'edge';\n    }\n    if (hints.browser !== 'unknown') {\n      hints.browserMajorVersion = Number(item.version);\n      break;\n    }\n  }\n\n  // Set deviceType, platform\n  const platform = userAgentData.platform.toLowerCase();\n  if (platform === 'windows') {\n    hints.platform = 'windows';\n  } else if (platform === 'android') {\n    hints.platform = 'android';\n    hints.deviceType = userAgentData.mobile ? 'phone' : 'tablet';\n  } else if (platform === 'macos') {\n    hints.platform = 'mac';\n  }\n  // TODO: Verify userAgentData support in Chrome 100 on iPhone/iPad when available\n  /*\n  else if (platform.indexOf('iphone') > -1) {\n    hints.platform = 'ios';\n    hints.deviceType = 'phone';\n  } else if (platform.indexOf('ipad') > -1) {\n    hints.platform = 'ios';\n    hints.deviceType = 'tablet';\n  } else if (platform.indexOf('ios') > -1) {\n    hints.platform = 'ios';\n    hints.deviceType = (userAgentData.mobile ? 'phone' : 'tablet');\n  }\n  */\n  return hints;\n}\n\nfunction getHintsFromUserAgentString(userAgent: string): Readonly<ClientHints> {\n  const hints = { ...defaultClientHints };\n\n  // Normalize the userAgent string\n  userAgent = userAgent.toLowerCase();\n\n  // Check platform, deviceType\n  if (userAgent.indexOf('iphone') > -1) {\n    hints.platform = 'ios';\n    hints.deviceType = 'phone';\n  } else if (\n    userAgent.indexOf('ipad') > -1 ||\n    (navigator.platform === 'MacIntel' && (navigator as any)['standalone'])\n  ) {\n    hints.platform = 'ios';\n    hints.deviceType = 'tablet';\n  } else if (userAgent.indexOf('mac') > -1) {\n    hints.platform = 'mac';\n  } else if (userAgent.indexOf('android') > -1) {\n    hints.platform = 'android';\n  } else if (userAgent.indexOf('win') > -1) {\n    hints.platform = 'windows';\n  }\n\n  // Now work on browser, browserMajorVersion\n  if (userAgent.indexOf('edg') > -1) {\n    hints.browser = 'edge';\n    hints.browserMajorVersion = parseMajorVersion(userAgent, /edg\\/(\\d+)/);\n  } else if (userAgent.indexOf('chrome') > -1) {\n    hints.browser = 'chrome';\n    hints.browserMajorVersion = parseMajorVersion(userAgent, /chrome\\/(\\d+)/);\n  } else if (userAgent.indexOf('crios') > -1) {\n    hints.browser = 'chrome';\n    hints.browserMajorVersion = parseMajorVersion(userAgent, /crios\\/(\\d+)/);\n  } else if (userAgent.indexOf('fxios') > -1) {\n    hints.browser = 'firefox';\n    hints.browserMajorVersion = parseMajorVersion(userAgent, /fxios\\/(\\d+)/);\n  } else if (userAgent.indexOf('firefox') > -1) {\n    hints.browser = 'firefox';\n    hints.browserMajorVersion = parseMajorVersion(userAgent, /rv:(\\d+)/);\n  } else if (userAgent.indexOf('safari') > -1) {\n    hints.browser = 'safari';\n    hints.browserMajorVersion = parseMajorVersion(userAgent, /version\\/(\\d+)/);\n  }\n\n  return hints;\n}\n\nfunction parseMajorVersion(userAgent: string, majorVersionPattern: RegExp): number {\n  let majorVer;\n  const matches = userAgent.match(majorVersionPattern);\n  if (matches) {\n    const majorVerString = matches[1];\n    if (majorVerString) {\n      majorVer = parseInt(majorVerString);\n    }\n  }\n  return majorVer ?? -1;\n}\n"],"names":["defaultClientHints","browser","browserMajorVersion","deviceType","platform","hasTouchSupport","window","isHybrid","matchMedia","_a","call","matches","cachedClientHints","parseMajorVersion","userAgent","majorVersionPattern","majorVer","match","majorVerString","parseInt","uaString","undefined","hints","userAgentData","navigator","Object","assign","item","brands","brand","toLowerCase","indexOf","Number","version","mobile","getHintsFromUserAgentData","getHintsFromUserAgentString","freeze"],"mappings":"mDA2BA,MAAMA,EAAkC,CACtCC,QAAS,UACTC,qBAAsB,EACtBC,WAAY,UACZC,SAAU,UACVC,gBAAiB,iBAAkBC,OACnCC,SAA8B,UAApBD,OAAOE,kBAAa,IAAAC,OAAA,EAAAA,EAAAC,KAAAJ,OAAA,4CAA4CK,SAG5E,IAAIC,EAuHJ,SAASC,EAAkBC,EAAmBC,GAC5C,IAAIC,EACJ,MAAML,EAAUG,EAAUG,MAAMF,GAChC,GAAIJ,EAAS,CACX,MAAMO,EAAiBP,EAAQ,GAC3BO,IACFF,EAAWG,SAASD,IAGxB,OAAOF,MAAAA,EAAAA,GAAa,mBA9HhB,SAAyBI,GAG7B,QAA0BC,IAAtBT,GAAmCQ,EAAU,CAC/C,IAAIE,EACJ,MAAMC,EAAiBC,UAAiB,cASxC,GAPEF,EADEC,EAoBR,SAAmCA,GACjC,MAAMD,EAAKG,OAAAC,OAAA,GAAQ1B,GAGnB,IAAK,IAAI2B,KAAQJ,EAAcK,OAAQ,CACrC,MAAMC,EAAQF,EAAKE,MAAMC,cAMzB,GALID,EAAME,QAAQ,WAAa,EAC7BT,EAAMrB,QAAU,SACP4B,EAAME,QAAQ,SAAW,IAClCT,EAAMrB,QAAU,QAEI,YAAlBqB,EAAMrB,QAAuB,CAC/BqB,EAAMpB,oBAAsB8B,OAAOL,EAAKM,SACxC,OAKJ,MAAM7B,EAAWmB,EAAcnB,SAAS0B,cACvB,YAAb1B,EACFkB,EAAMlB,SAAW,UACK,YAAbA,GACTkB,EAAMlB,SAAW,UACjBkB,EAAMnB,WAAaoB,EAAcW,OAAS,QAAU,UAC9B,UAAb9B,IACTkB,EAAMlB,SAAW,OAenB,OAAOkB,EA3DKa,CAA0BZ,GA8DxC,SAAqCT,GACnC,MAAMQ,EAAKG,OAAAC,OAAA,GAAQ1B,IAGnBc,EAAYA,EAAUgB,eAGRC,QAAQ,WAAa,GACjCT,EAAMlB,SAAW,MACjBkB,EAAMnB,WAAa,SAEnBW,EAAUiB,QAAQ,SAAW,GACL,aAAvBP,UAAUpB,UAA4BoB,UAAiB,YAExDF,EAAMlB,SAAW,MACjBkB,EAAMnB,WAAa,UACVW,EAAUiB,QAAQ,QAAU,EACrCT,EAAMlB,SAAW,MACRU,EAAUiB,QAAQ,YAAc,EACzCT,EAAMlB,SAAW,UACRU,EAAUiB,QAAQ,QAAU,IACrCT,EAAMlB,SAAW,WAIfU,EAAUiB,QAAQ,QAAU,GAC9BT,EAAMrB,QAAU,OAChBqB,EAAMpB,oBAAsBW,EAAkBC,EAAW,eAChDA,EAAUiB,QAAQ,WAAa,GACxCT,EAAMrB,QAAU,SAChBqB,EAAMpB,oBAAsBW,EAAkBC,EAAW,kBAChDA,EAAUiB,QAAQ,UAAY,GACvCT,EAAMrB,QAAU,SAChBqB,EAAMpB,oBAAsBW,EAAkBC,EAAW,iBAChDA,EAAUiB,QAAQ,UAAY,GACvCT,EAAMrB,QAAU,UAChBqB,EAAMpB,oBAAsBW,EAAkBC,EAAW,iBAChDA,EAAUiB,QAAQ,YAAc,GACzCT,EAAMrB,QAAU,UAChBqB,EAAMpB,oBAAsBW,EAAkBC,EAAW,aAChDA,EAAUiB,QAAQ,WAAa,IACxCT,EAAMrB,QAAU,SAChBqB,EAAMpB,oBAAsBW,EAAkBC,EAAW,mBAG3D,OAAOQ,EAzGKc,CAA4BhB,MAAAA,EAAAA,EAAYI,UAAUV,WAKvDM,EAMH,OAAOE,EALPV,EAAiBa,OAAAC,OAAA,GAAQJ,GACzBG,OAAOY,OAAOzB,GAOlB,OAAOA"}