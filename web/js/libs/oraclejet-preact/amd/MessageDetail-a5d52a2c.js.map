{"version":3,"file":"MessageDetail-a5d52a2c.js","sources":["../../src/UNSAFE_Message/MessageDetail.tsx"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { cssProps } from '@oracle/oraclejet-cssprops';\nimport { ItemMetadata } from '../utils/UNSAFE_dataProvider';\nimport { ComponentChildren, Fragment } from 'preact';\nimport { MessageVariant } from './Message.types';\nimport { isValidValueForProp } from './MessageFormattingUtils';\n\nconst messageDetailStyles = {\n  // TODO: Reevaluate once the TEXT component is available (JET-46891)\n  base: cssProps`${{\n    marginTop: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-spacing-2x)',\n    overflowWrap: 'anywhere'\n  }}`,\n\n  banner: cssProps`${{\n    fontSize: 'var(--oj-c-PRIVATE-DO-NOT-USE-typography-body-sm-font-size)',\n    color: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-text-color-primary)'\n  }}`,\n  inline: undefined\n};\n\ntype MessageWithDetailText = {\n  /**\n   * The detail text for the message\n   */\n  detail?: string;\n};\n\n/**\n * Structure of template item used for dynamic templates\n */\ntype MessageTemplateItem<K, D> = {\n  /**\n   * The data for the current message\n   */\n  data: D;\n\n  /**\n   * The zero-based index of the current message\n   */\n  index: number;\n\n  /**\n   * The key for the current message\n   */\n  key: K;\n\n  /**\n   * The metadata for the current message\n   */\n  metadata?: ItemMetadata<K>;\n};\n\n/**\n * Props for the Detail component\n */\ntype Props<K, D> = {\n  /**\n   * The template item for rendering the detail content\n   */\n  item: MessageTemplateItem<K, D>;\n\n  /**\n   * A custom renderer for rendering the detail content\n   */\n  renderer?: (item: MessageTemplateItem<K, D>) => ComponentChildren;\n\n  /**\n   * Style variant\n   */\n  variant?: MessageVariant;\n};\n\n/**\n * Default renderer for rendering the detail content.\n *\n * @param item The template item object\n * @returns Rendered detail content\n */\nfunction defaultDetailRenderer<D extends MessageWithDetailText>(\n  item: MessageTemplateItem<unknown, D>\n): ComponentChildren {\n  const { detail } = item.data;\n  // If the detail is null or an empty string, do not render the\n  // content row\n  if (!isValidValueForProp(detail)) {\n    return null;\n  }\n  return <Fragment>{detail}</Fragment>;\n}\n\n/**\n * Detail Component for rendering the detail content of the Message\n */\nfunction MessageDetail<K, D>({\n  item,\n  renderer = defaultDetailRenderer,\n  variant = 'banner'\n}: Props<K, D>) {\n  const renderedContent = renderer(item);\n\n  if (renderedContent == null) return null;\n\n  // If detail content is rendered, then wrap it in a div with specified style classes\n  const classes = `oj-c-message${variant}-detail ${messageDetailStyles.base} ${messageDetailStyles[variant]}`;\n  return <div class={classes}>{renderedContent}</div>;\n}\n\nexport { MessageDetail, MessageTemplateItem };\n"],"names":["messageDetailStyles","inline","undefined","defaultDetailRenderer","item","detail","data","isValidValueForProp","_jsx","Fragment","children","renderer","variant","renderedContent","classes","base","Object","assign","class"],"mappings":"iIAcA,MAAAA,EAAA,MAAA,iBAAA,UAWEC,YAAAC,GA6DF,SAAAC,EAAAC,GAGE,MAAAC,OAAAA,GAAAD,EAAAE,KAGA,OAAAC,EAAAA,oBAAAF,GAGAG,EAAAA,IAAAC,EAAAA,SAAA,CAAAC,SAAAL,IAFE,qBAQJ,UAAAD,KAAAA,EAAAO,SAAAA,EAAAR,EAAAS,QAAAA,EAAA,WAKE,MAAAC,EAAAF,EAAAP,cAE6B,OAAA,KAG7B,MAAAU,EAAAF,eAAAA,YAAAZ,EAAAe,QAAAf,EAAAY,KACA,OAAAJ,MAAA,MAAAQ,OAAAC,OAAA,CAAAC,MAAAJ,GAAA,CAAAJ,SAAAG"}