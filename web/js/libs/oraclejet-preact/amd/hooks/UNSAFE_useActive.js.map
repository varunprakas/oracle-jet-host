{"version":3,"file":"UNSAFE_useActive.js","sources":["../../../src/hooks/UNSAFE_useActive/useActive.ts"],"sourcesContent":["import { useToggle } from '../UNSAFE_useToggle';\nimport { useRef, useCallback } from 'preact/hooks';\n\nexport type ActiveOptions = {\n  isDisabled?: boolean;\n};\n\n/**\n * Indicates if primary mouse button is down\n * @param e\n * @returns\n */\nconst isPrimaryMouseButtonDown = (e: MouseEvent) => {\n  const flags = e.buttons !== undefined ? e.buttons : e.which;\n  const primaryMouseButtonDown = (flags & 1) === 1;\n  if (primaryMouseButtonDown) {\n    return true;\n  }\n  return false;\n};\n\n/**\n * Returns properties to manage active state indication\n * @returns\n */\nexport function useActive(settings: ActiveOptions = { isDisabled: false }): {\n  isActive: boolean;\n  activeProps: Record<string, any>;\n} {\n  const { bool, setTrue, setFalse } = useToggle(false);\n  const wasActive = useRef(false);\n\n  const mouseDownTarget = useCallback((e: MouseEvent) => {\n    if (isPrimaryMouseButtonDown(e)) {\n      setTrue();\n    }\n  }, []);\n\n  const leftTarget = useCallback((e: MouseEvent) => {\n    if (isPrimaryMouseButtonDown(e)) {\n      wasActive.current = true;\n    }\n    setFalse();\n  }, []);\n\n  const enteredTarget = useCallback((e: MouseEvent) => {\n    if (wasActive.current) {\n      if (isPrimaryMouseButtonDown(e)) {\n        setTrue();\n      }\n      wasActive.current = false;\n    }\n  }, []);\n\n  const activeProps = settings.isDisabled\n    ? {}\n    : {\n        onMouseDown: mouseDownTarget,\n        onMouseOut: leftTarget,\n        onMouseEnter: enteredTarget,\n        onMouseUp: setFalse,\n        onTouchStart: setTrue,\n        onTouchEnd: setFalse,\n        onTouchCancel: setFalse\n      };\n\n  return {\n    isActive: settings.isDisabled ? false : bool,\n    activeProps: activeProps\n  };\n}\n"],"names":["isPrimaryMouseButtonDown","e","undefined","buttons","which","settings","isDisabled","bool","setTrue","setFalse","useToggle","wasActive","useRef","mouseDownTarget","useCallback","leftTarget","current","enteredTarget","activeProps","onMouseDown","onMouseOut","onMouseEnter","onMouseUp","onTouchStart","onTouchEnd","onTouchCancel","isActive"],"mappings":"qFAYA,MAAMA,EAA4BC,KAEe,IAAP,QADZC,IAAdD,EAAEE,QAAwBF,EAAEE,QAAUF,EAAEG,qBAYlD,SAAoBC,EAA0B,CAAEC,YAAY,IAIhE,MAAMC,KAAEA,EAAFC,QAAQA,EAARC,SAAiBA,GAAaC,EAAAA,WAAU,GACxCC,EAAYC,UAAO,GAEnBC,EAAkBC,eAAab,IAC/BD,EAAyBC,IAC3BO,MAED,IAEGO,EAAaD,eAAab,IAC1BD,EAAyBC,KAC3BU,EAAUK,SAAU,GAEtBP,MACC,IAEGQ,EAAgBH,eAAab,IAC7BU,EAAUK,UACRhB,EAAyBC,IAC3BO,IAEFG,EAAUK,SAAU,KAErB,IAEGE,EAAcb,EAASC,WACzB,GACA,CACEa,YAAaN,EACbO,WAAYL,EACZM,aAAcJ,EACdK,UAAWb,EACXc,aAAcf,EACdgB,WAAYf,EACZgB,cAAehB,GAGrB,MAAO,CACLiB,UAAUrB,EAASC,YAAqBC,EACxCW,YAAaA"}