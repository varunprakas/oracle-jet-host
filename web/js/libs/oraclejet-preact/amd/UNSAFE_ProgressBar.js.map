{"version":3,"file":"UNSAFE_ProgressBar.js","sources":["../../src/UNSAFE_ProgressBar/ProgressBar.tsx"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport { JSX } from 'preact';\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport { cssProps } from '@oracle/oraclejet-cssprops';\nimport { useUser } from '../hooks/UNSAFE_useUser';\nimport { useTranslationBundle } from '../hooks/UNSAFE_useTranslationBundle';\nimport type { BundleType } from '../resources/nls/bundle';\n\ntype IntrinsicProps = Pick<JSX.HTMLAttributes<HTMLDivElement>, 'id' | 'class' | 'children'>;\n\ntype Props = {\n  /**\n   * Specifies the id of the progress bar.  If the progress bar is being used to describe the loading process of a particular region\n   * of the page, then the aria-describedby attribute of the region must point to the id of the ProgressBar\n   */\n  id?: IntrinsicProps['id'];\n  /**\n   * The value of the progress bar.  If the value is 'indeterminate', an indeterminate progress bar will be shown.\n   */\n  value?: 'indeterminate' | number;\n\n  /**\n   * Whether the progress bar is positioned at the top edge of a container or not.\n   * If set to 'top', the curved borders will be removed.\n   */\n  edge?: 'none' | 'top';\n\n  /**\n   * The maximum value of the progress bar.\n   */\n  max?: number;\n  /**\n   * The width of the progress bar.  This will use the CSS lengths styling.\n   */\n  // TODO: use the dimensions work the Jeanne is doing JET-49961\n  width?: string;\n\n  /**\n   * A label to be used for accessibility purposes when value is set to 'indeterminate'.\n   */\n  accessibleLabel?: string;\n};\n\nexport function ProgressBar({ value, max, ...otherProps }: Props) {\n  return value === 'indeterminate' ? (\n    <IndeterminateProgressBar {...otherProps} />\n  ) : (\n    <DeterminateProgressBar value={value} max={max} {...otherProps} />\n  );\n}\n\ntype IndeterminateProps = Omit<Props, 'value' | 'max'>;\n\nconst IndeterminateProgressBar = ({\n  accessibleLabel,\n  id,\n  width,\n  edge = 'none'\n}: IndeterminateProps) => {\n  const { direction } = useUser();\n  const classes = classNames([styles.value, styles.indeterminate, styles[direction]]);\n  const baseClasses = classNames([styles.base, edge === 'none' && styles.standalone]);\n  const translations = useTranslationBundle<BundleType>('@oracle/oraclejet-preact');\n  return (\n    <BarTrack\n      id={id}\n      ariaValueText={accessibleLabel || translations.progressIndeterminate()}\n      class={baseClasses}\n      width={width}>\n      <BarValue class={classes} />\n    </BarTrack>\n  );\n};\n\ntype DeterminateProps = Omit<Props, 'accessibleLabel'> & {\n  value?: number;\n};\n\nconst DeterminateProgressBar = ({\n  value = 0,\n  max = 100,\n  id,\n  width,\n  edge = 'none'\n}: DeterminateProps) => {\n  const percentage = `${Math.min(Math.max(0, value / max), 1) * 100}%`;\n  const baseClasses = classNames([styles.base, edge === 'none' && styles.standalone]);\n\n  return (\n    <BarTrack value={value} max={max} id={id} width={width} class={baseClasses}>\n      <BarValue class={styles.value} width={percentage} />\n    </BarTrack>\n  );\n};\n\ntype TrackProps = IntrinsicProps & {\n  value?: number;\n  max?: number;\n  min?: number;\n  width?: string;\n  color?: string;\n  ariaValueText?: string;\n};\nconst BarTrack = ({\n  value,\n  max,\n  min,\n  id,\n  width,\n  children,\n  ariaValueText,\n  color,\n  ...otherProps\n}: TrackProps) => {\n  const ariaMin = value != null ? (min ? min : '0') : null;\n  const ariaMax = value != null ? max : null;\n  const ariaNow = value != null ? value : null;\n  return (\n    <div\n      role=\"progressbar\"\n      id={id}\n      aria-valuemin={ariaMin}\n      aria-valuemax={ariaMax}\n      aria-valuenow={ariaNow}\n      aria-valuetext={ariaValueText}\n      class={otherProps.class}\n      style={{ width: width, backgroundColor: color }}>\n      {children}\n    </div>\n  );\n};\n\ntype ValueProps = Pick<IntrinsicProps, 'class'> & {\n  width?: string;\n  color?: string;\n};\n\nconst BarValue = ({ width, color, ...otherProps }: ValueProps) => {\n  return <div class={otherProps.class} style={{ width: width, backgroundColor: color }}></div>;\n};\n\nconst styles = {\n  base: cssProps`${{\n    height: 'var(--oj-c-PRIVATE-DO-NOT-USE-progress-bar-height)',\n    position: 'relative',\n    boxSizing: 'border-box',\n    overflowX: 'hidden',\n    backgroundColor: 'var(--oj-c-PRIVATE-DO-NOT-USE-progress-bar-track-bg-color)'\n  }}`,\n  value: cssProps`${{\n    margin: '0',\n    backgroundColor: 'var(--oj-c-PRIVATE-DO-NOT-USE-progress-bar-value-bg-color)',\n    height: '100%',\n    boxSizing: 'border-box'\n  }}`,\n  indeterminate: cssProps`${{\n    width: '25%',\n    height: 'var(--oj-c-PRIVATE-DO-NOT-USE-progress-bar-height)',\n    backgroundColor: 'var(--oj-c-PRIVATE-DO-NOT-USE-progress-bar-value-bg-color)',\n    position: 'relative',\n    animationDuration: '2s',\n    animationTimingFunction: 'linear',\n    animationIterationCount: 'infinite'\n  }}`,\n  standalone: cssProps`${{\n    borderRadius: 'var(--oj-c-PRIVATE-DO-NOT-USE-progress-bar-border-radius)'\n  }}`,\n  rtl: cssProps`${{\n    animationName: 'var(--oj-c-PRIVATE-DO-NOT-USE-private-progress-bar-indeterminate-animation-rtl)'\n  }}`,\n  ltr: cssProps`${{\n    animationName: 'var(--oj-c-PRIVATE-DO-NOT-USE-private-progress-bar-indeterminate-animation)'\n  }}`\n};\n"],"names":["IndeterminateProgressBar","accessibleLabel","id","width","edge","direction","useUser","classes","classNames","styles","value","indeterminate","baseClasses","base","standalone","translations","useTranslationBundle","_jsx","BarTrack","Object","assign","ariaValueText","progressIndeterminate","class","children","jsx","BarValue","DeterminateProgressBar","max","percentage","_a","ariaMax","ariaNow","role","ariaMin","otherProps","style","backgroundColor","color"],"mappings":"8TA2DA,MAAAA,EAAA,EAAAC,gBAAAA,EAAAC,GAAAA,EAAAC,MAAAA,EAAAC,KAAAA,EAAA,WAME,MAAAC,UAAAA,GAAAC,EAAAA,UACAC,EAAAC,EAAAA,WAAA,CAAAC,EAAAC,MAAAD,EAAAE,cAAAF,EAAAJ,KACAO,EAAAJ,aAAA,CAAAC,EAAAI,KAAA,SAAAT,GAAAK,EAAAK,aACAC,EAAAC,uBAAA,4BACA,OAAAC,MAAAC,EAAAC,OAAAC,OAAA,CAAAlB,GAAAA,EAAAmB,cAAApB,GAAAc,EAAAO,wBAAAC,MAAAX,EAAAT,MAAAA,GAAA,CAAAqB,SAAAP,EAAAQ,IAAAC,EAAA,CAAAH,MAAAhB,QAeFoB,EAAA,EAAAjB,MAAAA,EAAA,EAAAkB,IAAAA,EAAA,IAAA1B,GAAAA,EAAAC,MAAAA,EAAAC,KAAAA,EAAA,uDAQEQ,EAAAJ,aAAA,CAAAC,EAAAI,KAAA,SAAAT,GAAAK,EAAAK,aAEA,OAAAG,MAAAC,EAAAC,OAAAC,OAAA,CAAAV,MAAAA,EAAAkB,IAAAA,EAAA1B,GAAAA,EAAAC,MAAAA,EAAAoB,MAAAX,GAAA,CAAAY,SAAAP,EAAAQ,IAAAC,EAAA,CAAAH,MAAAd,EAAAC,MAAAP,MAAA0B,QAeFX,EAAAY,+LAYEC,EAAA,MAAArB,EAAAkB,EAAA,KACAI,EAAA,MAAAtB,EAAAA,EAAA,KACA,OAAAO,MAAA,MAAAE,OAAAC,OAAA,CAAAa,KAAA,cAAA/B,GAAAA,EAAA,gBAAAgC,EAAA,gBAAAH,EAAA,gBAAAC,EAAA,iBAAAX,EAAAE,MAAAY,EAAAZ,MAAAa,MAAA,CAAAjC,MAAAA,EAAAkC,gBAAAC,IAAA,CAAAd,SAAAA,MAoBFE,EAAAI,2DACE,OAAAb,EAAAA,IAAA,MAAA,CAAAM,MAAAY,EAAAZ,MAAAa,MAAA,CAAAjC,MAAAA,EAAAkC,gBAAAC,MAGF7B,EAAA,MAAA,iBAAA,wBAAA,sBAAA,eAAA,uCAlGA,SAAAqB,sDACE,MAAA,kBAAApB,EAAAO,EAAAQ,IAAAzB,EAAAmB,OAAAC,OAAA,GAAAe,IAAAlB,EAAAA,IAAAU,EAAAR,OAAAC,OAAA,CAAAV,MAAAA,EAAAkB,IAAAA,GAAAO"}