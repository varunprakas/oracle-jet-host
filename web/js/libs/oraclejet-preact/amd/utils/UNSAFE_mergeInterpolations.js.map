{"version":3,"file":"UNSAFE_mergeInterpolations.js","sources":["../../../../node_modules/ramda/src/internal/_curry3.js","../../../../node_modules/ramda/src/internal/_isObject.js","../../../../node_modules/ramda/src/mergeWithKey.js","../../../../node_modules/ramda/src/mergeDeepWithKey.js","../../../src/utils/UNSAFE_mergeInterpolations/mergeInterpolations.ts"],"sourcesContent":["var _curry1 =\n/*#__PURE__*/\nrequire(\"./_curry1\");\n\nvar _curry2 =\n/*#__PURE__*/\nrequire(\"./_curry2\");\n\nvar _isPlaceholder =\n/*#__PURE__*/\nrequire(\"./_isPlaceholder\");\n/**\n * Optimized internal three-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\n\nfunction _curry3(fn) {\n  return function f3(a, b, c) {\n    switch (arguments.length) {\n      case 0:\n        return f3;\n\n      case 1:\n        return _isPlaceholder(a) ? f3 : _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        });\n\n      case 2:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f3 : _isPlaceholder(a) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _curry1(function (_c) {\n          return fn(a, b, _c);\n        });\n\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) && _isPlaceholder(c) ? f3 : _isPlaceholder(a) && _isPlaceholder(b) ? _curry2(function (_a, _b) {\n          return fn(_a, _b, c);\n        }) : _isPlaceholder(a) && _isPlaceholder(c) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) && _isPlaceholder(c) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b, c);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b, c);\n        }) : _isPlaceholder(c) ? _curry1(function (_c) {\n          return fn(a, b, _c);\n        }) : fn(a, b, c);\n    }\n  };\n}\n\nmodule.exports = _curry3;","function _isObject(x) {\n  return Object.prototype.toString.call(x) === '[object Object]';\n}\n\nmodule.exports = _isObject;","var _curry3 =\n/*#__PURE__*/\nrequire(\"./internal/_curry3\");\n\nvar _has =\n/*#__PURE__*/\nrequire(\"./internal/_has\");\n/**\n * Creates a new object with the own properties of the two provided objects. If\n * a key exists in both objects, the provided function is applied to the key\n * and the values associated with the key in each object, with the result being\n * used as the value associated with the key in the returned object.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @sig ((String, a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeDeepWithKey, R.merge, R.mergeWith\n * @example\n *\n *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n *      R.mergeWithKey(concatValues,\n *                     { a: true, thing: 'foo', values: [10, 20] },\n *                     { b: true, thing: 'bar', values: [15, 35] });\n *      //=> { a: true, b: true, thing: 'bar', values: [10, 20, 15, 35] }\n * @symb R.mergeWithKey(f, { x: 1, y: 2 }, { y: 5, z: 3 }) = { x: 1, y: f('y', 2, 5), z: 3 }\n */\n\n\nvar mergeWithKey =\n/*#__PURE__*/\n_curry3(function mergeWithKey(fn, l, r) {\n  var result = {};\n  var k;\n\n  for (k in l) {\n    if (_has(k, l)) {\n      result[k] = _has(k, r) ? fn(k, l[k], r[k]) : l[k];\n    }\n  }\n\n  for (k in r) {\n    if (_has(k, r) && !_has(k, result)) {\n      result[k] = r[k];\n    }\n  }\n\n  return result;\n});\n\nmodule.exports = mergeWithKey;","var _curry3 =\n/*#__PURE__*/\nrequire(\"./internal/_curry3\");\n\nvar _isObject =\n/*#__PURE__*/\nrequire(\"./internal/_isObject\");\n\nvar mergeWithKey =\n/*#__PURE__*/\nrequire(\"./mergeWithKey\");\n/**\n * Creates a new object with the own properties of the two provided objects.\n * If a key exists in both objects:\n * - and both associated values are also objects then the values will be\n *   recursively merged.\n * - otherwise the provided function is applied to the key and associated values\n *   using the resulting value as the new value associated with the key.\n * If a key only exists in one object, the value will be associated with the key\n * of the resulting object.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig ((String, a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.mergeWithKey, R.mergeDeepWith\n * @example\n *\n *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n *      R.mergeDeepWithKey(concatValues,\n *                         { a: true, c: { thing: 'foo', values: [10, 20] }},\n *                         { b: true, c: { thing: 'bar', values: [15, 35] }});\n *      //=> { a: true, b: true, c: { thing: 'bar', values: [10, 20, 15, 35] }}\n */\n\n\nvar mergeDeepWithKey =\n/*#__PURE__*/\n_curry3(function mergeDeepWithKey(fn, lObj, rObj) {\n  return mergeWithKey(function (k, lVal, rVal) {\n    if (_isObject(lVal) && _isObject(rVal)) {\n      return mergeDeepWithKey(fn, lVal, rVal);\n    } else {\n      return fn(k, lVal, rVal);\n    }\n  }, lObj, rObj);\n});\n\nmodule.exports = mergeDeepWithKey;","import { classNames } from '../UNSAFE_classNames';\nimport mergeDeepWithKey from 'ramda/src/mergeDeepWithKey';\n\ntype Obj = Record<string, unknown>;\ntype Interpolation<P> = (props: P) => Record<string, string> | {};\n\nconst combineClassNames = (key: string, l: any, r: any) =>\n  key === 'class' ? classNames([l, r]) : r;\n\nconst mergeInterpolations =\n  <P extends Obj>(interpolations: Interpolation<P>[]) =>\n  (props: P) =>\n    interpolations.reduce(\n      (acc, fn) => mergeDeepWithKey(combineClassNames, acc, fn(props)),\n      {} as Record<string, string>\n    );\n\nexport { mergeInterpolations };\n"],"names":["_curry1","require$$0","_curry2","require$$1","_isPlaceholder","require$$2","_curry3_1","fn","f3","a","b","c","arguments","length","_b","_c","_a","_isObject_1","x","Object","prototype","toString","call","_curry3","_has","_isObject","mergeWithKey","_curry3$1","l","r","k","result","mergeDeepWithKey_1","mergeDeepWithKey","lObj","rObj","lVal","rVal","combineClassNames","key","classNames","interpolations","props","reduce","acc"],"mappings":"qKAAA,IAAIA,EAEJC,EAAAA,UAEIC,EAEJC,EAAAA,UAEIC,EAEJC,EAAAA,iBAiDA,IAAAC,EAtCA,SAAiBC,GACf,OAAO,SAASC,EAAGC,EAAGC,EAAGC,GACvB,OAAQC,UAAUC,QAChB,KAAK,EACH,OAAOL,EAET,KAAK,EACH,OAAOJ,EAAeK,GAAKD,EAAKN,GAAQ,SAAUY,EAAIC,GACpD,OAAOR,EAAGE,EAAGK,EAAIC,MAGrB,KAAK,EACH,OAAOX,EAAeK,IAAML,EAAeM,GAAKF,EAAKJ,EAAeK,GAAKP,GAAQ,SAAUc,EAAID,GAC7F,OAAOR,EAAGS,EAAIN,EAAGK,MACdX,EAAeM,GAAKR,GAAQ,SAAUY,EAAIC,GAC7C,OAAOR,EAAGE,EAAGK,EAAIC,MACdf,GAAQ,SAAUe,GACrB,OAAOR,EAAGE,EAAGC,EAAGK,MAGpB,QACE,OAAOX,EAAeK,IAAML,EAAeM,IAAMN,EAAeO,GAAKH,EAAKJ,EAAeK,IAAML,EAAeM,GAAKR,GAAQ,SAAUc,EAAIF,GACvI,OAAOP,EAAGS,EAAIF,EAAIH,MACfP,EAAeK,IAAML,EAAeO,GAAKT,GAAQ,SAAUc,EAAID,GAClE,OAAOR,EAAGS,EAAIN,EAAGK,MACdX,EAAeM,IAAMN,EAAeO,GAAKT,GAAQ,SAAUY,EAAIC,GAClE,OAAOR,EAAGE,EAAGK,EAAIC,MACdX,EAAeK,GAAKT,GAAQ,SAAUgB,GACzC,OAAOT,EAAGS,EAAIN,EAAGC,MACdP,EAAeM,GAAKV,GAAQ,SAAUc,GACzC,OAAOP,EAAGE,EAAGK,EAAIH,MACdP,EAAeO,GAAKX,GAAQ,SAAUe,GACzC,OAAOR,EAAGE,EAAGC,EAAGK,MACbR,EAAGE,EAAGC,EAAGC,MClDtB,IAAAM,EAJA,SAAmBC,GACjB,MAA6C,oBAAtCC,OAAOC,UAAUC,SAASC,KAAKJ,ICDpCK,EAEJtB,EAEIuB,EAEJrB,EAAAA,OCFIsB,EAEJtB,EAEIuB,ED4BGC,GAAC,SAAsBpB,EAAIqB,EAAGC,GACnC,IACIC,EADAC,EAAS,GAGb,IAAKD,KAAKF,EACJJ,EAAKM,EAAGF,KACVG,EAAOD,GAAKN,EAAKM,EAAGD,GAAKtB,EAAGuB,EAAGF,EAAEE,GAAID,EAAEC,IAAMF,EAAEE,IAInD,IAAKA,KAAKD,EACJL,EAAKM,EAAGD,KAAOL,EAAKM,EAAGC,KACzBA,EAAOD,GAAKD,EAAEC,IAIlB,OAAOC,KCCTC,EAnDA/B,GAyCQ,SAASgC,EAAiB1B,EAAI2B,EAAMC,GAC1C,OAAOT,GAAa,SAAUI,EAAGM,EAAMC,GACrC,OAAIZ,EAAUW,IAASX,EAAUY,GACxBJ,EAAiB1B,EAAI6B,EAAMC,GAE3B9B,EAAGuB,EAAGM,EAAMC,KAEpBH,EAAMC,MC5CX,MAAMG,EAAoB,CAACC,EAAaX,EAAQC,IACtC,UAARU,EAAkBC,EAAAA,WAAW,CAACZ,EAAGC,IAAMA,wBAGvBY,GACfC,GACCD,EAAeE,QACb,CAACC,EAAKrC,IAAO0B,EAAiBK,EAAmBM,EAAKrC,EAAGmC,KACzD"}