{"version":3,"file":"UNSAFE_TextField.js","sources":["../../src/UNSAFE_TextField/ReadonlyTextFieldInput.tsx","../../src/UNSAFE_TextField/ReadonlyTextField.tsx","../../../node_modules/ramda/src/internal/_arity.js","../../../node_modules/ramda/src/internal/_curryN.js","../../../node_modules/ramda/src/curryN.js","../../../node_modules/ramda/src/curry.js","../../src/UNSAFE_TextField/TextFieldContent.tsx","../../src/UNSAFE_TextField/StyledTextField.tsx","../../src/UNSAFE_TextField/MaxLengthLiveRegion.tsx","../../src/UNSAFE_TextField/TextField.tsx"],"sourcesContent":["import { ComponentChildren, JSX, Ref } from 'preact';\nimport { useFormContext } from '../hooks/UNSAFE_useFormContext';\nimport { cssProps } from '@oracle/oraclejet-cssprops';\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport { textInterpolations } from '../utils/UNSAFE_interpolations/text';\nimport type { TextProps } from '../utils/UNSAFE_interpolations/text';\nimport { mergeInterpolations } from '../utils/UNSAFE_mergeInterpolations';\nimport { useFormFieldContext } from '../hooks/UNSAFE_useFormFieldContext';\nimport { getLoadingAriaLabel } from './FormControlUtils';\n\ntype AutoFocusProp = JSX.HTMLAttributes<HTMLInputElement>['autofocus'];\n\ntype ReadonlyAsInputProps = {\n  as: 'input';\n  type: JSX.HTMLAttributes<HTMLInputElement>['type'];\n  elementRef?: Ref<HTMLInputElement>;\n  rows?: never;\n};\n\ntype ReadonlyAsTextAreaProps = {\n  as: 'textarea';\n  elementRef?: Ref<HTMLTextAreaElement>;\n  type?: never;\n  rows?: number;\n};\n\ntype ReadonlyAsDivProps = {\n  as?: 'div';\n  elementRef?: Ref<HTMLDivElement>;\n  type?: never;\n  rows?: never;\n};\n\ntype Props = TextProps &\n  (ReadonlyAsDivProps | ReadonlyAsInputProps | ReadonlyAsTextAreaProps) & {\n    ariaLabel?: string;\n    ariaLabelledby?: string;\n    autoFocus?: AutoFocusProp;\n    hasInsideLabel?: boolean;\n    id?: string;\n    inlineUserAssistance?: ComponentChildren;\n    innerReadonlyField?: ComponentChildren;\n    value?: string;\n  };\n\nconst readOnlyTextFieldStyles = {\n  base: cssProps`${{\n    minHeight:\n      'calc(var(--oj-c-PRIVATE-DO-NOT-USE-typography-body-md-line-height) * var(--oj-c-PRIVATE-DO-NOT-USE-typography-body-md-font-size))',\n    // TODO: Use Text component instead of CSS\n    wordBreak: 'break-word',\n    whiteSpace: 'pre-wrap',\n    // TODO: Cleanup the border and background CSS\n    backgroundColor: 'transparent',\n    borderColor: 'transparent',\n    borderWidth: '0',\n    color: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-text-color-primary)',\n    boxSizing: 'border-box',\n    // TODO: Use the Flex component instead of CSS\n    display: 'flex',\n    flexDirection: 'column',\n    width: '100%',\n    fontFamily: 'inherit',\n    fontSize: '100%',\n    fontWeight: 'inherit',\n    lineHeight: 'inherit',\n    outlineWidth: '0',\n\n    '&:focus': {\n      outlineStyle: 'dotted',\n      outlineWidth: '1px',\n      outlineColor: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-focus-border-color)',\n      outlineOffset: '1px'\n    }\n  }}`,\n  textareaBase: cssProps`${{\n    resize: 'none'\n  }}`,\n  inEnabledFormBase: cssProps`${{\n    whiteSpace: 'nowrap',\n    overflowX: 'scroll',\n    overflowY: 'hidden',\n    scrollbarWidth: 'none'\n  }}`,\n\n  textareaInEnabledFormBase: cssProps`${{\n    marginTop:\n      'calc((var(--oj-c-PRIVATE-DO-NOT-USE-text-field-height) - 1rem * var(--oj-c-PRIVATE-DO-NOT-USE-typography-body-md-line-height))/ 2 - 1px)',\n    marginBottom:\n      'calc((var(--oj-c-PRIVATE-DO-NOT-USE-text-field-height) - 1rem * var(--oj-c-PRIVATE-DO-NOT-USE-typography-body-md-line-height))/ 2 - 1px)',\n    marginLeft: '0',\n    marginRight: '0',\n    paddingLeft: 'var(--oj-c-PRIVATE-DO-NOT-USE-text-field-text-to-edge-padding)',\n    paddingRight: '0',\n    overflowX: 'auto',\n    overflowY: 'auto',\n    whiteSpace: 'pre-wrap'\n  }}`,\n\n  inEnabledFormLabelInside: cssProps`${{\n    // TODO: Look into why we need this hacky CSS\n    marginTop:\n      'calc(var(--oj-c-PRIVATE-DO-NOT-USE-text-field-inside-edge-padding-top) + 0.1875rem)',\n    paddingTop: '0',\n    minHeight:\n      'calc(var(--oj-c-PRIVATE-DO-NOT-USE-typography-body-md-line-height) * var(--oj-c-PRIVATE-DO-NOT-USE-typography-body-md-font-size))'\n  }}`,\n\n  textareaInEnabledFormLabelInside: cssProps`${{\n    paddingTop: 0,\n    paddingBottom: 0,\n    // We are using a transparent border here instead of padding, due to how textarea scrolls the padding off the screen\n    // and the text content will clash with the inside label.\n    borderColor: 'transparent',\n    borderStyle: 'solid',\n    marginTop:\n      'calc(var(--oj-c-PRIVATE-DO-NOT-USE-label-inside-edge-font-size) * var(--oj-c-PRIVATE-DO-NOT-USE-label-inside-edge-line-height) + var(--oj-c-PRIVATE-DO-NOT-USE-label-inside-edge-position-top))',\n    // The 0.25rem is an aesthetically pleasing amount of bottom padding\n    marginBottom: '0.25rem'\n  }}`,\n\n  // We don't want any default padding the browser provides for readonly\n  textareaInReadonlyFormNotInside: cssProps`${{\n    paddingBlockStart: '0',\n    paddingInlineStart: '0'\n  }}`,\n\n  inEnabledFormNoLabelInside: cssProps`${{\n    // TODO: Remove if this is not needed.\n    justifyContent: 'center'\n  }}`,\n\n  // don't apply this for textarea\n  inEnabledFormNoStartContent: cssProps`${{\n    marginLeft: 'var(--oj-c-PRIVATE-DO-NOT-USE-text-field-text-to-edge-padding)',\n    marginRight: 'var(--oj-c-PRIVATE-DO-NOT-USE-text-field-text-to-edge-padding)',\n    paddingLeft: '0',\n    paddingRight: '0'\n  }}`\n};\n\nexport function ReadonlyTextFieldInput({\n  ariaLabel,\n  ariaLabelledby,\n  autoFocus,\n  as = 'div',\n  elementRef,\n  hasInsideLabel = false,\n  id,\n  inlineUserAssistance,\n  innerReadonlyField,\n  rows,\n  type,\n  value = '',\n  ...props\n}: Props) {\n  const { isFormLayout, isReadonly: isReadonlyForm } = useFormContext();\n  const { isLoading } = useFormFieldContext();\n  const ariaLabelForReadonly = isLoading ? getLoadingAriaLabel() : ariaLabel;\n\n  // get classes for text align\n  const interpolations = [...Object.values(textInterpolations)];\n  const styleInterpolations = mergeInterpolations<Props>(interpolations);\n  const { class: styleInterpolationClasses } = styleInterpolations(props);\n\n  const readonlyDivClasses = classNames([\n    as !== 'textarea' && 'oj-c-hide-scrollbar', // TODO: Temp workaround for using --webkit-scrollbar to hide the scrollbar\n    readOnlyTextFieldStyles.base,\n    as === 'textarea' && readOnlyTextFieldStyles.textareaBase,\n    isFormLayout && !isReadonlyForm && readOnlyTextFieldStyles.inEnabledFormBase,\n    isFormLayout &&\n      !isReadonlyForm &&\n      as === 'textarea' &&\n      readOnlyTextFieldStyles.textareaInEnabledFormBase,\n    isFormLayout &&\n      !isReadonlyForm &&\n      (hasInsideLabel\n        ? readOnlyTextFieldStyles.inEnabledFormLabelInside\n        : readOnlyTextFieldStyles.inEnabledFormNoLabelInside),\n    isFormLayout &&\n      !isReadonlyForm &&\n      as === 'textarea' &&\n      hasInsideLabel &&\n      readOnlyTextFieldStyles.textareaInEnabledFormLabelInside,\n    isFormLayout &&\n      isReadonlyForm &&\n      as === 'textarea' &&\n      !hasInsideLabel &&\n      readOnlyTextFieldStyles.textareaInReadonlyFormNotInside,\n    isFormLayout &&\n      !isReadonlyForm &&\n      as !== 'textarea' &&\n      readOnlyTextFieldStyles.inEnabledFormNoStartContent,\n    styleInterpolationClasses\n  ]);\n\n  if (as === 'input') {\n    return (\n      <input\n        aria-label={ariaLabelForReadonly}\n        aria-labelledby={ariaLabelledby}\n        autofocus={autoFocus}\n        class={readonlyDivClasses}\n        id={id}\n        readonly={true}\n        // @ts-ignore\n        ref={elementRef}\n        type={type}\n        value={value}\n      />\n    );\n  }\n  if (as === 'textarea') {\n    return (\n      <textarea\n        aria-label={ariaLabelForReadonly}\n        aria-labelledby={ariaLabelledby}\n        autofocus={autoFocus}\n        class={readonlyDivClasses}\n        id={id}\n        readonly={true}\n        // @ts-ignore\n        ref={elementRef}\n        rows={rows}>\n        {value}\n      </textarea>\n    );\n  }\n  return (\n    <div\n      aria-label={ariaLabelForReadonly}\n      aria-labelledby={ariaLabelledby}\n      aria-readonly={true}\n      autofocus={autoFocus}\n      class={readonlyDivClasses}\n      // @ts-ignore\n      ref={elementRef}\n      role=\"textbox\"\n      tabIndex={0}>\n      {value}\n    </div>\n  );\n}\n","import { ComponentChildren, JSX } from 'preact';\nimport { useFormContext } from '../hooks/UNSAFE_useFormContext';\nimport { LabelValueLayout } from '../UNSAFE_LabelValueLayout';\nimport { StyledComponentProps } from '../utils/UNSAFE_typeUtils';\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport { getFormControlClasses } from './FormControlUtils';\nimport { getReadonlyClasses, getTextFieldClasses, loadingStyles } from './TextFieldUtils';\nimport { useFormFieldContext } from '../hooks/UNSAFE_useFormFieldContext';\nimport { Size } from '../utils/UNSAFE_size';\n\ntype DivProps = JSX.HTMLAttributes<HTMLDivElement>;\ntype UAProps = {\n  inlineUserAssistance?: ComponentChildren;\n};\ntype InnerOuterClassNamesProps = {\n  outerClassNames?: string;\n  innerClassNames?: string;\n};\n\ntype StartTopLabelReadonlyTextFieldProps = Omit<DivProps, 'label'> &\n  UAProps &\n  InnerOuterClassNamesProps & {\n    label?: ComponentChildren;\n    labelEdge?: 'start' | 'top';\n    labelStartWidth?: Size;\n  };\n\nconst StartTopLabelReadonlyTextField = ({\n  outerClassNames,\n  innerClassNames,\n  label,\n  labelEdge,\n  labelStartWidth,\n  inlineUserAssistance,\n  children,\n  ...props\n}: StartTopLabelReadonlyTextFieldProps) => {\n  return (\n    <div {...props} class={outerClassNames}>\n      <LabelValueLayout label={label} labelEdge={labelEdge} labelStartWidth={labelStartWidth}>\n        <div class={innerClassNames}>{children}</div>\n      </LabelValueLayout>\n      {inlineUserAssistance}\n    </div>\n  );\n};\n\ntype InsideLabelReadonlyTextFieldProps = DivProps & UAProps & InnerOuterClassNamesProps;\nconst InsideLabelReadonlyTextField = ({\n  outerClassNames,\n  innerClassNames,\n  inlineUserAssistance,\n  children,\n  ...props\n}: InsideLabelReadonlyTextFieldProps) => {\n  return (\n    <div {...props} class={outerClassNames}>\n      <div class={innerClassNames}>{children}</div>\n      {inlineUserAssistance}\n    </div>\n  );\n};\n\nexport type StyleProps = UAProps & {\n  label?: ComponentChildren;\n  labelEdge?: 'inside' | 'start' | 'top';\n  variant?: 'textarea';\n};\n\ntype Props = StyledComponentProps<'div', StyleProps>;\n\nexport const ReadonlyTextField = ({ label, labelEdge, children, variant, ...props }: Props) => {\n  const { isFormLayout, isReadonly: isReadonlyForm } = useFormContext();\n  const { isLoading } = useFormFieldContext();\n  const hasInsideLabel = label !== undefined && labelEdge === 'inside';\n\n  // TODO: We need to re-evaluate how we use CSS multi-classing to our VDOM components\n  const formControlClassNames = getFormControlClasses(hasInsideLabel);\n  const textFieldClassNames = getTextFieldClasses(true);\n  const readonlyClassNames = getReadonlyClasses(\n    isFormLayout && !isReadonlyForm,\n    hasInsideLabel,\n    variant\n  );\n  const outerClassNames = classNames([formControlClassNames, textFieldClassNames]);\n  const innerClassNames = classNames([readonlyClassNames, isLoading && loadingStyles]);\n\n  if (label !== undefined && (labelEdge === 'start' || labelEdge === 'top')) {\n    return (\n      <StartTopLabelReadonlyTextField\n        outerClassNames={outerClassNames}\n        innerClassNames={innerClassNames}\n        label={label}\n        labelEdge={labelEdge}\n        {...props}>\n        {children}\n      </StartTopLabelReadonlyTextField>\n    );\n  }\n\n  return (\n    <InsideLabelReadonlyTextField\n      outerClassNames={outerClassNames}\n      innerClassNames={innerClassNames}\n      {...props}>\n      {label}\n      {children}\n    </InsideLabelReadonlyTextField>\n  );\n};\n","function _arity(n, fn) {\n  /* eslint-disable no-unused-vars */\n  switch (n) {\n    case 0:\n      return function () {\n        return fn.apply(this, arguments);\n      };\n\n    case 1:\n      return function (a0) {\n        return fn.apply(this, arguments);\n      };\n\n    case 2:\n      return function (a0, a1) {\n        return fn.apply(this, arguments);\n      };\n\n    case 3:\n      return function (a0, a1, a2) {\n        return fn.apply(this, arguments);\n      };\n\n    case 4:\n      return function (a0, a1, a2, a3) {\n        return fn.apply(this, arguments);\n      };\n\n    case 5:\n      return function (a0, a1, a2, a3, a4) {\n        return fn.apply(this, arguments);\n      };\n\n    case 6:\n      return function (a0, a1, a2, a3, a4, a5) {\n        return fn.apply(this, arguments);\n      };\n\n    case 7:\n      return function (a0, a1, a2, a3, a4, a5, a6) {\n        return fn.apply(this, arguments);\n      };\n\n    case 8:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n        return fn.apply(this, arguments);\n      };\n\n    case 9:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n        return fn.apply(this, arguments);\n      };\n\n    case 10:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n        return fn.apply(this, arguments);\n      };\n\n    default:\n      throw new Error('First argument to _arity must be a non-negative integer no greater than ten');\n  }\n}\n\nmodule.exports = _arity;","var _arity =\n/*#__PURE__*/\nrequire(\"./_arity\");\n\nvar _isPlaceholder =\n/*#__PURE__*/\nrequire(\"./_isPlaceholder\");\n/**\n * Internal curryN function.\n *\n * @private\n * @category Function\n * @param {Number} length The arity of the curried function.\n * @param {Array} received An array of arguments received thus far.\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\n\nfunction _curryN(length, received, fn) {\n  return function () {\n    var combined = [];\n    var argsIdx = 0;\n    var left = length;\n    var combinedIdx = 0;\n\n    while (combinedIdx < received.length || argsIdx < arguments.length) {\n      var result;\n\n      if (combinedIdx < received.length && (!_isPlaceholder(received[combinedIdx]) || argsIdx >= arguments.length)) {\n        result = received[combinedIdx];\n      } else {\n        result = arguments[argsIdx];\n        argsIdx += 1;\n      }\n\n      combined[combinedIdx] = result;\n\n      if (!_isPlaceholder(result)) {\n        left -= 1;\n      }\n\n      combinedIdx += 1;\n    }\n\n    return left <= 0 ? fn.apply(this, combined) : _arity(left, _curryN(length, combined, fn));\n  };\n}\n\nmodule.exports = _curryN;","var _arity =\n/*#__PURE__*/\nrequire(\"./internal/_arity\");\n\nvar _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n\nvar _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _curryN =\n/*#__PURE__*/\nrequire(\"./internal/_curryN\");\n/**\n * Returns a curried equivalent of the provided function, with the specified\n * arity. The curried function has two unusual capabilities. First, its\n * arguments needn't be provided one at a time. If `g` is `R.curryN(3, f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.5.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curry\n * @example\n *\n *      const sumArgs = (...args) => R.sum(args);\n *\n *      const curriedAddFourNumbers = R.curryN(4, sumArgs);\n *      const f = curriedAddFourNumbers(1, 2);\n *      const g = f(3);\n *      g(4); //=> 10\n */\n\n\nvar curryN =\n/*#__PURE__*/\n_curry2(function curryN(length, fn) {\n  if (length === 1) {\n    return _curry1(fn);\n  }\n\n  return _arity(length, _curryN(length, [], fn));\n});\n\nmodule.exports = curryN;","var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n\nvar curryN =\n/*#__PURE__*/\nrequire(\"./curryN\");\n/**\n * Returns a curried equivalent of the provided function. The curried function\n * has two unusual capabilities. First, its arguments needn't be provided one\n * at a time. If `f` is a ternary function and `g` is `R.curry(f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (* -> a) -> (* -> a)\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curryN, R.partial\n * @example\n *\n *      const addFourNumbers = (a, b, c, d) => a + b + c + d;\n *\n *      const curriedAddFourNumbers = R.curry(addFourNumbers);\n *      const f = curriedAddFourNumbers(1, 2);\n *      const g = f(3);\n *      g(4); //=> 10\n */\n\n\nvar curry =\n/*#__PURE__*/\n_curry1(function curry(fn) {\n  return curryN(fn.length, fn);\n});\n\nmodule.exports = curry;","import { cssProps } from '@oracle/oraclejet-cssprops';\nimport { ComponentChildren, Ref } from 'preact';\nimport { useFormFieldContext } from '../hooks/UNSAFE_useFormFieldContext';\nimport { Flex } from '../UNSAFE_Flex';\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport { loadingStyles } from './TextFieldUtils';\nimport curry from 'ramda/src/curry';\n\ntype Props = {\n  mainContent?: ComponentChildren;\n  insideLabel?: ComponentChildren;\n  startContent?: ComponentChildren;\n  endContent?: ComponentChildren;\n  resize?: 'horizontal' | 'vertical' | 'both';\n  variant?: 'error' | 'warning' | 'textarea' | 'textareaError' | 'textareaWarning';\n  rootRef?: Ref<HTMLDivElement>;\n};\n\n// TODO: replace this with var(--oj-button-height) once it is available\nconst ojButtonHeight = '2.75rem';\n// TODO: replace this with var(--oj-button-sm-height) once it is available\nconst ojButtonSmHeight = '2.25rem';\n// TODO: replace this with var(--oj-button-icon-size) once it is available\nconst ojButtonIconSize = 'var(--oj-c-PRIVATE-DO-NOT-USE-core-icon-size-lg)';\n// TODO: replace this with var(--oj-button-sm-icon-size) once it is available\nconst ojButtonSmIconSize = '1.25rem';\n\nconst textFieldContainerStyles = {\n  base: cssProps`${{\n    position: 'relative',\n    boxSizing: 'border-box',\n    borderStyle: 'solid',\n    transitionProperty: 'border-color',\n    transitionDuration: '.1s',\n    transitionTimingFunction: 'linear',\n    borderColor: 'var(--oj-c-PRIVATE-DO-NOT-USE-text-field-border-color)',\n    borderWidth: 'var(--oj-c-PRIVATE-DO-NOT-USE-text-field-border-width)',\n    borderRadius: 'var(--oj-c-PRIVATE-DO-NOT-USE-text-field-border-radius)',\n    backgroundColor: 'var(--oj-c-PRIVATE-DO-NOT-USE-text-field-bg-color)',\n    // TODO: Use Flex component instead of CSS\n    display: 'flex',\n    alignItems: 'center',\n    overflowX: 'hidden',\n    overflowY: 'hidden',\n    height: 'var(--oj-c-PRIVATE-DO-NOT-USE-text-field-height)'\n  }}`,\n  textarea: cssProps`${{\n    height: 'auto'\n  }}`,\n  labelInside: cssProps`${{\n    minHeight: 'var(--oj-c-PRIVATE-DO-NOT-USE-text-field-inside-edge-height)'\n  }}`,\n  focused: cssProps`${{\n    borderColor: 'var(--oj-c-PRIVATE-DO-NOT-USE-text-field-border-color-focus)',\n    boxShadow: 'var(--oj-c-PRIVATE-DO-NOT-USE-text-field-box-shadow-focus)'\n  }}`,\n  resize: {\n    both: cssProps`${{\n      resize: 'both'\n    }}`,\n    horizontal: cssProps`${{\n      resize: 'horizontal'\n    }}`,\n    vertical: cssProps`${{\n      resize: 'vertical'\n    }}`\n  },\n  disabled: cssProps`${{\n    backgroundColor: 'var(--oj-c-PRIVATE-DO-NOT-USE-text-field-bg-color-disabled)',\n    borderColor: 'var(--oj-c-PRIVATE-DO-NOT-USE-text-field-border-color-disabled)'\n  }}`,\n  error: cssProps`${{\n    borderColor: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-danger-3)'\n  }}`,\n  warning: cssProps`${{\n    borderColor: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-warning-3)'\n  }}`\n};\nconst containerContentVariantStyles = {\n  textarea: textFieldContainerStyles.textarea,\n  textareaError: textFieldContainerStyles.textarea,\n  textareaWarning: textFieldContainerStyles.textarea\n};\nconst containerStatusVariantStyles = {\n  error: textFieldContainerStyles.error,\n  textareaError: textFieldContainerStyles.error,\n  warning: textFieldContainerStyles.warning,\n  textareaWarning: textFieldContainerStyles.warning\n};\nconst getStyle = curry(\n  (styles: Record<string, string>, variant: string | undefined) => variant && styles[variant]\n);\nconst getContainerContentVariantStyles = getStyle(containerContentVariantStyles);\nconst getContainerStatusVariantStyles = getStyle(containerStatusVariantStyles);\n\nconst textFieldStartContentStyles = {\n  base: cssProps`${{\n    marginInlineStart: 'var(--oj-c-PRIVATE-DO-NOT-USE-text-field-icon-to-edge-padding)',\n    fontSize: ojButtonSmIconSize\n  }}`,\n  labelInside: cssProps`${{\n    fontSize: ojButtonIconSize\n  }}`,\n  disabled: cssProps`${{\n    color: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-text-color-disabled)'\n  }}`\n};\n\nconst textFieldMiddleStyles = {\n  base: cssProps`${{\n    position: 'relative',\n    // TODO: Use Flex component instead of CSS\n    display: 'inline-flex',\n    flex: 1,\n    width: '100%',\n    height: '100%',\n    boxSizing: 'border-box'\n  }}`,\n  textarea: cssProps`${{\n    // The 1px is needed to make sure that the textarea element's scrollbar doesn't overlap the focus drop shadow\n    paddingInlineEnd: '1px'\n  }}`\n};\nconst middleContentVariantStyles = {\n  textarea: textFieldMiddleStyles.textarea,\n  textareaError: textFieldMiddleStyles.textarea,\n  textareaWarning: textFieldMiddleStyles.textarea\n};\nconst getMiddleContentVariantStyles = getStyle(middleContentVariantStyles);\n\nconst textFieldEndContentStyles = {\n  base: cssProps`${{\n    paddingInlineEnd: `calc((var(--oj-c-PRIVATE-DO-NOT-USE-text-field-height) - ${ojButtonSmHeight} - 2px) / 2)`\n  }}`,\n  labelInside: cssProps`${{\n    paddingInlineEnd: `calc((var(--oj-c-PRIVATE-DO-NOT-USE-text-field-inside-edge-height) - ${ojButtonHeight} - 2px) / 2)`\n  }}`\n};\n\n// Renders the oj-text-field-container dom which includes the\n// start, middle (where the inside label and inputElem goes),\n// and end pieces of the form component.\n// This does not include user assistance because that is rendered outside the\n// oj-text-field-container; that is rendered in the TextField component.\nexport const TextFieldContent = ({\n  insideLabel,\n  mainContent,\n  startContent,\n  endContent,\n  resize,\n  variant,\n  rootRef\n}: Props) => {\n  const { isDisabled, isFocused, isLoading } = useFormFieldContext();\n\n  let statusVariant = variant?.toLowerCase().replace('textarea', '');\n  // if statusVariant is the empty string, set to undefined\n  statusVariant = statusVariant ? statusVariant : undefined;\n\n  const rootStyles = classNames([\n    textFieldContainerStyles.base,\n    insideLabel !== undefined && textFieldContainerStyles.labelInside,\n    resize && textFieldContainerStyles.resize[resize],\n    isFocused && textFieldContainerStyles.focused,\n    isDisabled\n      ? textFieldContainerStyles.disabled\n      : classNames([\n          getContainerStatusVariantStyles(variant),\n          // TODO: don't use class names: https://jira.oraclecorp.com/jira/browse/JET-50572\n          variant && `oj-c-text-field-${statusVariant}`\n        ]),\n    isLoading && loadingStyles,\n    getContainerContentVariantStyles(variant)\n  ]);\n  const startContentStyles = classNames([\n    textFieldStartContentStyles.base,\n    insideLabel != undefined && textFieldStartContentStyles.labelInside,\n    isDisabled && textFieldStartContentStyles.disabled\n  ]);\n  const middleStyles = classNames([\n    textFieldMiddleStyles.base,\n    getMiddleContentVariantStyles(variant)\n  ]);\n  const endContentStyles = classNames([\n    textFieldEndContentStyles.base,\n    insideLabel != undefined && textFieldEndContentStyles.labelInside\n  ]);\n  return (\n    <div role=\"presentation\" class={rootStyles} ref={rootRef}>\n      {startContent && (\n        <span class={startContentStyles}>\n          <Flex justify=\"center\" align=\"center\">\n            {startContent}\n          </Flex>\n        </span>\n      )}\n      <div class={middleStyles}>\n        {insideLabel}\n        {mainContent}\n      </div>\n      {endContent && (\n        <span class={endContentStyles}>\n          <Flex justify=\"center\" align=\"center\">\n            {endContent}\n          </Flex>\n        </span>\n      )}\n    </div>\n  );\n};\n","import { classNames } from '../utils/UNSAFE_classNames';\nimport { StyledComponentProps } from '../utils/UNSAFE_typeUtils';\nimport { getFormControlClasses } from './FormControlUtils';\nimport { getTextFieldClasses } from './TextFieldUtils';\nimport { useFormFieldContext } from '../hooks/UNSAFE_useFormFieldContext';\n\nexport type StyleProps = {\n  hasInsideLabel?: boolean;\n};\ntype Props = StyledComponentProps<'div', StyleProps>;\n\nexport const StyledTextField = ({ hasInsideLabel = false, ...props }: Props) => {\n  const { isReadonly } = useFormFieldContext();\n\n  // TODO: We need to re-evaluate how we use CSS multi-classing to our VDOM components\n  const formControlClassNames = getFormControlClasses(hasInsideLabel);\n  const textFieldClassNames = getTextFieldClasses(isReadonly);\n  const cssClassNames = classNames([formControlClassNames, textFieldClassNames]);\n  return <div {...props} class={cssClassNames} />;\n};\n","import { Fragment } from 'preact';\nimport { useDebounce } from '../hooks/UNSAFE_useDebounce';\nimport { useTranslationBundle } from '../hooks/UNSAFE_useTranslationBundle';\nimport { BundleType } from '../resources/nls/bundle';\nimport { LiveRegion } from '../UNSAFE_LiveRegion';\n\ntype Props = {\n  isMaxLengthExceeded?: boolean;\n  maxLength: number;\n  valueLength?: number;\n};\n\nconst MAX_LENGTH_UPDATE_DELAY = 500;\n\nexport function MaxLengthLiveRegion({ isMaxLengthExceeded, maxLength, valueLength = 0 }: Props) {\n  // Comment copied from InputBase.js in Big JET:\n  // Only update the aria-live div when the user has paused for more than\n  // 500 milliseconds. That way, we avoid queued up aria-live messages which\n  // would be annoying and not helpful. The 500ms was agreed upon in the\n  // accessibility review meeting.\n  const debouncedRemainingChars = useDebounce(maxLength - valueLength, MAX_LENGTH_UPDATE_DELAY);\n  const translations = useTranslationBundle<BundleType>('@oracle/oraclejet-preact');\n  const maxLengthExceededTranslatedString = translations.formControl_maxLengthExceeded({\n    MAX_LENGTH: `${maxLength}`\n  });\n  const remainingCharsTranslatedString = translations.formControl_maxLengthRemaining({\n    CHARACTER_COUNT: `${debouncedRemainingChars}`\n  });\n\n  return (\n    <Fragment>\n      <LiveRegion>{remainingCharsTranslatedString}</LiveRegion>\n      {isMaxLengthExceeded && (\n        <LiveRegion type=\"assertive\">{maxLengthExceededTranslatedString}</LiveRegion>\n      )}\n    </Fragment>\n  );\n}\n","import { ComponentChildren, ComponentProps, Fragment, JSX, Ref } from 'preact';\nimport { LabelValueLayout } from '../UNSAFE_LabelValueLayout';\nimport { TextFieldContent } from './TextFieldContent';\nimport { StyledTextField } from './StyledTextField';\nimport { Size } from '../utils/UNSAFE_size';\n\n// TextField takes the inputElem and userAssistanceContainer\n// and renders the form component's root dom, along with the\n// TextFieldContent, and the user assistance container.\n\n// The PickedProps are the ones we pass through to the the TextFieldContent\ntype PickedPropsFromTextFieldContent = Pick<\n  ComponentProps<typeof TextFieldContent>,\n  'startContent' | 'mainContent' | 'endContent' | 'variant' | 'resize'\n>;\ntype PickedPropsFromHTMLElement = Pick<JSX.HTMLAttributes<HTMLElement>, 'id'>;\n// TODO: How should a parent component listen to events for the text field?  The recommendation\n// was to remove event listeners from TextField itself and instead configure the TextFieldInput\n// with them, for example, thus keeping TextField a more pure layout component.  The\n// TextFieldInput renders the focusable input element, and may be a more natural place for\n// listeners.  We would potentially have to add similar listeners for the ReadonlyTextField, but\n// that component renders the focusable element itself;  there is no TextFieldInput or analogous\n// component passed in.  (from review on 3/8/22)\ntype FocusEvents = Pick<JSX.HTMLAttributes<HTMLDivElement>, 'onFocus' | 'onBlur'>;\ntype KeyEvents = Pick<JSX.HTMLAttributes<HTMLDivElement>, 'onKeyDown'>;\ntype MouseEvents = Pick<\n  JSX.HTMLAttributes<HTMLDivElement>,\n  'onMouseDown' | 'onMouseEnter' | 'onMouseLeave'\n>;\ntype LabelProps = {\n  label?: ComponentChildren;\n  labelEdge?: 'inside' | 'start' | 'top';\n  labelStartWidth?: Size;\n};\ntype Props = PickedPropsFromTextFieldContent &\n  PickedPropsFromHTMLElement &\n  FocusEvents &\n  KeyEvents &\n  MouseEvents &\n  LabelProps & {\n    inlineUserAssistance?: ComponentChildren;\n    mainFieldRef?: Ref<HTMLDivElement>;\n  };\n\n// TODO: Do we need named props for start/endContent, or could they just be children that get\n// wrapped in a flex layout?  (from review on 3/8/22)\n\n// TODO: Instead of passing the inputElem, label, and userAssistance as named props here, should we\n// have a separate layout component that lays them out, which could just be passed as a child\n// to the TextField?  (from review on 3/8/22)\n\nexport const TextField = ({\n  id,\n  endContent,\n  mainContent,\n  startContent,\n  inlineUserAssistance,\n  label,\n  labelEdge,\n  labelStartWidth,\n  mainFieldRef,\n  resize,\n  variant,\n  onFocus,\n  onBlur,\n  onKeyDown,\n  onMouseDown,\n  onMouseEnter,\n  onMouseLeave\n}: Props) => {\n  // TODO: What are the implications for interoperability between new preact-based form components\n  // and the existing JET oj-form-layout?  The preact form components create their own start/top\n  // labels, while oj-form-layout expects to create those itself and wire them to the existing form\n  // components through attributes like labelled-by.  (from review on 3/8/22)\n\n  // TODO: How should a parent form component render component-specific content within TextField,\n  // for example an aria live region?  Instead of a children prop on TextField, could the parent\n  // component pass comp-specific content through other props, like inputElem?   The parent could\n  // have its own component that composes inputElem with additional DOM.  (from review on 3/8/22)\n\n  const styledTextFieldChildren =\n    label !== undefined && (labelEdge === 'start' || labelEdge === 'top') ? (\n      <LabelValueLayout label={label} labelEdge={labelEdge} labelStartWidth={labelStartWidth}>\n        <Fragment>\n          <TextFieldContent\n            startContent={startContent}\n            mainContent={mainContent}\n            endContent={endContent}\n            resize={resize}\n            variant={variant}\n            rootRef={mainFieldRef}\n          />\n          {inlineUserAssistance}\n        </Fragment>\n      </LabelValueLayout>\n    ) : (\n      <Fragment>\n        <TextFieldContent\n          insideLabel={label}\n          startContent={startContent}\n          mainContent={mainContent}\n          endContent={endContent}\n          resize={resize}\n          variant={variant}\n          rootRef={mainFieldRef}\n        />\n        {inlineUserAssistance}\n      </Fragment>\n    );\n  return (\n    <StyledTextField\n      id={id}\n      hasInsideLabel={label !== undefined && labelEdge === 'inside'}\n      onfocusin={onFocus}\n      onfocusout={onBlur}\n      onKeyDown={onKeyDown}\n      onMouseDown={onMouseDown}\n      onMouseEnter={onMouseEnter}\n      onMouseLeave={onMouseLeave}>\n      {styledTextFieldChildren}\n    </StyledTextField>\n  );\n};\n"],"names":["readOnlyTextFieldStyles","StartTopLabelReadonlyTextField","_a","outerClassNames","innerClassNames","label","labelEdge","labelStartWidth","inlineUserAssistance","children","props","__rest","_jsxs","jsxs","Object","assign","class","_jsx","jsx","LabelValueLayout","InsideLabelReadonlyTextField","_arity_1","n","fn","apply","this","arguments","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","Error","_arity","require$$0","_isPlaceholder","require$$1","_curryN_1","_curryN","length","received","combined","argsIdx","left","combinedIdx","result","_curry1","_curry2","require$$2","require$$3","curryN_1","curryN","textFieldContainerStyles","resize","containerContentVariantStyles","containerStatusVariantStyles","getStyle","curry","styles","variant","getContainerContentVariantStyles","getContainerStatusVariantStyles","textFieldStartContentStyles","textFieldMiddleStyles","getMiddleContentVariantStyles","textFieldEndContentStyles","TextFieldContent","insideLabel","mainContent","startContent","endContent","rootRef","statusVariant","toLowerCase","replace","base","undefined","labelInside","isLoading","loadingStyles","role","rootStyles","ref","startContentStyles","Flex","justify","align","middleStyles","endContentStyles","StyledTextField","hasInsideLabel","isReadonly","useFormFieldContext","formControlClassNames","getFormControlClasses","textFieldClassNames","getTextFieldClasses","cssClassNames","classNames","isMaxLengthExceeded","maxLength","valueLength","debouncedRemainingChars","useDebounce","translations","useTranslationBundle","maxLengthExceededTranslatedString","formControl_maxLengthExceeded","MAX_LENGTH","remainingCharsTranslatedString","formControl_maxLengthRemaining","CHARACTER_COUNT","Fragment","LiveRegion","type","isFormLayout","isReadonlyForm","useFormContext","readonlyClassNames","getReadonlyClasses","ariaLabel","ariaLabelledby","autoFocus","as","elementRef","id","innerReadonlyField","rows","value","ariaLabelForReadonly","getLoadingAriaLabel","styleInterpolations","mergeInterpolations","interpolations","autofocus","readonlyDivClasses","tabIndex","mainFieldRef","onFocus","onBlur","onKeyDown","onMouseDown","onMouseEnter","onMouseLeave","styledTextFieldChildren","onfocusin","onfocusout"],"mappings":"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"}